apiVersion: v1
kind: Namespace
metadata:
  name: devops-harbor
  labels:
    name: devops-harbor

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: harbor-data
  namespace: devops-harbor
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: harbor-database
  namespace: devops-harbor
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: harbor-redis
  namespace: devops-harbor
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: standard

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: harbor-config
  namespace: devops-harbor
data:
  harbor.yml: |
    hostname: localhost
    http:
      port: 80
    https:
      port: 443
    external_url: http://localhost:8082
    harbor_admin_password: Harbor12345
    database:
      password: root123
      max_idle_conns: 50
      max_open_conns: 1000
    data_volume: /data
    log:
      level: info
      local:
        rotate_count: 50
        rotate_size: 200M
        location: /var/log/docker/
    storage_service:
      filesystem:
        rootdirectory: /storage
    registry:
      storage:
        filesystem:
          rootdirectory: /storage
    chart:
      absolute_url: disabled
    jobservice:
      max_job_workers: 10
    notification:
      webhook_job_max_retry: 10
    cache:
      layer: true
      artifact: true

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-database
  namespace: devops-harbor
  labels:
    app: harbor-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harbor-database
  template:
    metadata:
      labels:
        app: harbor-database
    spec:
      containers:
      - name: postgresql
        image: goharbor/harbor-db:v2.9.0
        env:
        - name: POSTGRES_PASSWORD
          value: "root123"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: database-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
      volumes:
      - name: database-data
        persistentVolumeClaim:
          claimName: harbor-database

---
apiVersion: v1
kind: Service
metadata:
  name: harbor-database
  namespace: devops-harbor
  labels:
    app: harbor-database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    name: postgresql
  selector:
    app: harbor-database

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-redis
  namespace: devops-harbor
  labels:
    app: harbor-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harbor-redis
  template:
    metadata:
      labels:
        app: harbor-redis
    spec:
      containers:
      - name: redis
        image: goharbor/redis-photon:v2.9.0
        volumeMounts:
        - name: redis-data
          mountPath: /var/lib/redis
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 100m
            memory: 256Mi
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: harbor-redis

---
apiVersion: v1
kind: Service
metadata:
  name: harbor-redis
  namespace: devops-harbor
  labels:
    app: harbor-redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    app: harbor-redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harbor-core
  namespace: devops-harbor
  labels:
    app: harbor-core
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harbor-core
  template:
    metadata:
      labels:
        app: harbor-core
    spec:
      containers:
      - name: core
        image: goharbor/harbor-core:v2.9.0
        env:
        - name: CORE_SECRET
          value: "not-a-secure-secret"
        - name: JOBSERVICE_SECRET
          value: "not-a-secure-secret"
        - name: DATABASE_TYPE
          value: "postgresql"
        - name: DATABASE_HOST
          value: "harbor-database"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USERNAME
          value: "postgres"
        - name: DATABASE_PASSWORD
          value: "root123"
        - name: DATABASE_DATABASE
          value: "registry"
        - name: REDIS_HOST
          value: "harbor-redis"
        - name: REDIS_PORT
          value: "6379"
        - name: REGISTRY_URL
          value: "http://harbor-registry:5000"
        - name: REGISTRY_CONTROLLER_URL
          value: "http://harbor-registryctl:8080"
        - name: PORTAL_URL
          value: "http://harbor-portal:80"
        - name: LOG_LEVEL
          value: "info"
        - name: CONFIG_PATH
          value: "/etc/harbor/harbor.yml"
        volumeMounts:
        - name: harbor-data
          mountPath: /data
        - name: harbor-config
          mountPath: /etc/harbor
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /api/v2.0/systeminfo
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /api/v2.0/systeminfo
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: harbor-data
        persistentVolumeClaim:
          claimName: harbor-data
      - name: harbor-config
        configMap:
          name: harbor-config

---
apiVersion: v1
kind: Service
metadata:
  name: harbor
  namespace: devops-harbor
  labels:
    app: harbor
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8080
    name: http
  selector:
    app: harbor-core

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: harbor-ingress
  namespace: devops-harbor
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: harbor.localhost
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: harbor
            port:
              number: 80
