apiVersion: v1
kind: Namespace
metadata:
  name: devops-netbox
  labels:
    name: devops-netbox

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: netbox-data
  namespace: devops-netbox
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: standard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox-postgres
  namespace: devops-netbox
  labels:
    app: netbox-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netbox-postgres
  template:
    metadata:
      labels:
        app: netbox-postgres
    spec:
      containers:
      - name: postgresql
        image: postgres:11
        env:
        - name: POSTGRES_DB
          value: "netbox"
        - name: POSTGRES_USER
          value: "netbox"
        - name: POSTGRES_PASSWORD
          value: "netbox"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - netbox
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - netbox
          initialDelaySeconds: 30
          periodSeconds: 10
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: netbox-data

---
apiVersion: v1
kind: Service
metadata:
  name: netbox-postgres
  namespace: devops-netbox
  labels:
    app: netbox-postgres
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    name: postgresql
  selector:
    app: netbox-postgres

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox
  namespace: devops-netbox
  labels:
    app: netbox
spec:
  replicas: 1
  selector:
    matchLabels:
      app: netbox
  template:
    metadata:
      labels:
        app: netbox
    spec:
      containers:
      - name: netbox
        image: netboxcommunity/netbox:v3.6.0
        ports:
        - containerPort: 8001
          name: http
        env:
        - name: DB_HOST
          value: "netbox-postgres"
        - name: DB_PORT
          value: "5432"
        - name: DB_NAME
          value: "netbox"
        - name: DB_USER
          value: "netbox"
        - name: DB_PASSWORD
          value: "netbox"
        - name: SECRET_KEY
          value: "netbox-secret-key-change-in-production"
        - name: ALLOWED_HOSTS
          value: "*"
        - name: DEBUG
          value: "True"
        - name: SUPERUSER_NAME
          value: "admin"
        - name: SUPERUSER_EMAIL
          value: "admin@localhost"
        - name: SUPERUSER_PASSWORD
          value: "admin123"
        volumeMounts:
        - name: netbox-data
          mountPath: /opt/netbox/netbox/media
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /login/
            port: 8001
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /login/
            port: 8001
          initialDelaySeconds: 120
          periodSeconds: 30
      volumes:
      - name: netbox-data
        persistentVolumeClaim:
          claimName: netbox-data

---
apiVersion: v1
kind: Service
metadata:
  name: netbox
  namespace: devops-netbox
  labels:
    app: netbox
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 8001
    name: http
  selector:
    app: netbox
